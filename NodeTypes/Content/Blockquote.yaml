'Litefyr.Blockquote:Content':
  superTypes:
    'Neos.Neos:Content': true
    'Carbon.Image:AlternativeText': true
    'Carbon.Image:Image': true
    'Litefyr.Integration:Mixin.ThemeSelector': true
    'Litefyr.Animations:Mixin.TextWithOptionalImage': true
    'Litefyr.Integration:Mixin.LookGroup': true
    'Litefyr.Integration:Mixin.Breakout.IfHasImage': true
    'Litefyr.Integration:Mixin.FontSize': true
  label: "${Neos.Node.labelForNode(node).properties('cite', 'alternativeText', 'text', 'function')}"
  search:
    fulltext:
      enable: true
  ui:
    label: i18n
    icon: quote-left
    position: 500
    help:
      message: i18n
  properties:
    breakout:
      ui:
        inspector:
          hidden: 'ClientEval: !!node.properties.image'
          editorOptions:
            values:
              full:
                hidden: true
    theme:
      defaultValue: 'main'
      ui:
        inspector:
          position: 20
          group: look
          editorOptions:
            allowEmpty: true
            dataSourceAdditionalData:
              alwaysShow: 'ClientEval: !node.properties.image'
    image:
      ui:
        reloadPageIfChanged: true
    alternativeText:
      ui:
        inspector:
          editorOptions:
            # TODO How we can handle the translation of the placeholder?
            placeholder: "ClientEval:node.properties.cite?'Bild von ' + node.properties.cite.replaceAll('<br>', ' '):''"
    rounded:
      options:
        preset: 'image.rounded'
    text:
      options:
        preset: 'text.autoparagraph'
      ui:
        inline:
          editorOptions:
            formatting:
              blockquote: false
              table: false
              h2: false
              h3: false
              h4: false
              ul: false
              ol: false
    cite:
      type: string
      search:
        fulltextExtractor: '${Indexing.extractHtmlTags(value)}'
      ui:
        inlineEditable: true
        inline:
          editorOptions:
            placeholder: i18n
    function:
      type: string
      search:
        fulltextExtractor: '${Indexing.extractHtmlTags(value)}'
      ui:
        inlineEditable: true
        inline:
          editorOptions:
            placeholder: i18n
