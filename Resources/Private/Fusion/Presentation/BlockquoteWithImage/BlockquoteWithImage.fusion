prototype(Litefyr.Blockquote:Presentation.BlockquoteWithImage) < prototype(Neos.Fusion:Component) {
    @propTypes {
        content = ${PropTypes.string}
        cite = ${PropTypes.string}
        function = ${PropTypes.string}
    }

    @styleguide {
        props {
            content = Sitegeist.ChitChat:P {
                length = 500
            }
            cite = Sitegeist.ChitChat:Line {
                length = 50
            }
            function = Sitegeist.ChitChat:Line {
                length = 50
            }
            imageSource = Carbon.Image:Helper.ImageSource {
                outputDummy = true
            }
            alternativeText = 'Alternativer Text'
        }
    }

    @if.hasContent = ${this.content}

    @private {
        fallbackName = ${String.replace(props.cite, '<br>', ' ')}
        alternativeText = ${props.alternativeText || (private.fallbackName ? Translation.translate('imageFromPerson', null, [private.fallbackName], 'Main', 'Litefyr.Presentation') : null)}
        fileLoader = Carbon.FileLoader:Strategy.Attributes {
            package = 'Litefyr.Blockquote'
            css = 'Main.css'
        }
        customRounded = ${Presentation.rounded(props.customRounded)}
    }

    renderer = afx`
        <Litefyr.Presentation:Spacing
            {...private.fileLoader}
            class={[Presentation.cssClass("blockquote-with-image"), "-blockquote-with-image not-prose", private.customRounded.class, props.theme ? "clippath-quote clippath-preserve" : null]}
            style={private.customRounded.style}
            width="full"
            animationText={props.animationText}
            data-animation-text-selector={props.animationText ? "p" : null}
        >
            <div
                @if={props.theme}
                data-theme={props.theme}
                class.clippath={Presentation.clippathClass("content")}
                class.base="-blockquote-with-image__bg -z-10 w-full h-full bg-theme-back col-start-1 col-span-3 row-start-2 row-span-2 lg:col-end-6 lg:row-start-2 lg:row-span-1"
                aria-hidden="true"
            ></div>

            <Litefyr.Presentation:Atom.Image
                figureAttributes.data-animation-media={props.animationMedia}
                figureAttributes.class="-blockquote-with-image__image w-full rounded-image shadow-blockquote-with-image overflow-clip sm:max-w-3xl"
                figureAttributes.data-theme={props.theme || null}
                class="object-cover w-full h-full lg:h-full lg:w-full"
                {...props}
                alternativeText={private.alternativeText}
                content={null}
            />
            <blockquote data-theme={props.theme || null} class={["-blockquote-with-image__text text-theme-front self-center text-balance", Presentation.fontSize(props.fontSize)]}>
                <div class="animation-text">
                    <Litefyr.Presentation:Atom.Icon
                        styleAndIcon={Configuration.setting('Litefyr.Presentation.icons.blockquote')}
                        attributes.class="fill-theme-front opacity-25 size-12 md:size-16 -translate-x-8"
                    />
                </div>
                {props.content}
                <footer class={["mt-[1em] font-main", Presentation.fontSize(props.fontSize, -2)]}>
                    <p>{props.cite}</p>
                    <p class="text-theme-front opacity-80">{props.function}</p>
                </footer>
            </blockquote>
        </Litefyr.Presentation:Spacing>
    `
}
